{"ast":null,"code":"var _jsxFileName = \"/Users/coletrammell/Documents/GitHub/ChatApplication/frontend/src/GuestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GuestPage.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GuestPage = () => {\n  _s();\n  var _rooms$find;\n  const rooms = [{\n    id: 1,\n    name: 'Room 1'\n  }, {\n    id: 2,\n    name: 'Room 2'\n  }, {\n    id: 3,\n    name: 'Room 3'\n  }\n  // Add more rooms as needed\n  ];\n\n  const [currentChat, setCurrentChat] = useState('');\n  const [message, setMessage] = useState('');\n  const [chats, setChats] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n  const [chatName, setChatName] = useState('');\n  const [backendUrl] = useState('http://localhost:3001'); // Replace with your backend server URL\n\n  const socket = io(backendUrl);\n  useEffect(() => {\n    socket.on('message', handleNewMessage);\n    return () => {\n      socket.off('message', handleNewMessage);\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (currentChat) {\n      fetchMessages();\n    }\n  }, [currentChat]);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/messages/${currentChat}`);\n      if (response.ok) {\n        const data = await response.json();\n        setChats(prevChats => ({\n          ...prevChats,\n          [currentChat]: data\n        }));\n      } else {\n        console.log('Failed to fetch chat messages');\n      }\n    } catch (error) {\n      console.log('Error fetching chat messages:', error);\n    }\n  };\n  const saveMessage = async () => {\n    if (!currentChat) {\n      console.log('Not currently in a chat room');\n      return;\n    }\n    const newMessage = {\n      user: chatName || 'Guest',\n      content: message,\n      timestamp: new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n    try {\n      const response = await fetch(`${backendUrl}/messages/${currentChat}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newMessage)\n      });\n      if (response.ok) {\n        setChats(prevChats => ({\n          ...prevChats,\n          [currentChat]: [...(prevChats[currentChat] || []), newMessage]\n        }));\n        setMessage('');\n        socket.emit('message', newMessage);\n      } else {\n        console.log('Failed to save chat message');\n      }\n    } catch (error) {\n      console.log('Error saving chat message:', error);\n    }\n  };\n  const handleJoin = (roomId, roomName) => {\n    console.log(`Joining room ${roomId}`);\n    setCurrentChat(roomId);\n    // Implement the logic to join the room with the specified roomId\n    if (!chats[roomId]) {\n      setChats(prevChats => ({\n        ...prevChats,\n        [roomId]: []\n      }));\n    }\n  };\n  const handleLeave = roomId => {\n    console.log(`Leaving room ${roomId}`);\n    setCurrentChat('');\n    // Implement the logic to leave the room with the specified roomId\n  };\n\n  const handleNewMessage = newMessage => {\n    setChats(prevChats => ({\n      ...prevChats,\n      [currentChat]: [...(prevChats[currentChat] || []), newMessage]\n    }));\n  };\n  const handleMessageSend = () => {\n    console.log(`Sending message: ${message}`);\n    try {\n      if (!currentChat) {\n        throw new Error('You are not currently in a chat room.');\n      }\n      const newMessage = {\n        user: chatName || 'Guest',\n        content: message,\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setChats(prevChats => ({\n        ...prevChats,\n        [currentChat]: [...prevChats[currentChat], newMessage]\n      }));\n      setMessage('');\n      socket.emit('message', newMessage);\n    } catch (error) {\n      console.log(error.message);\n      alert(error.message); // Display an alert to the user\n    }\n  };\n\n  const getCurrentChatMessages = () => {\n    return chats[currentChat] || [];\n  };\n  const handlePopupOpen = () => {\n    setShowPopup(true);\n  };\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n  const handleChatNameChange = e => {\n    setChatName(e.target.value);\n  };\n  const handleChatNameSubmit = () => {\n    handlePopupClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GuestChatContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomColumn\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatRoomCSS\",\n        children: [rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomName\",\n            children: room.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomButtons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chatRoomButton joinButton\",\n              onClick: () => handleJoin(room.id, room.name),\n              children: \"Join\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chatRoomButton leaveButton\",\n              onClick: () => handleLeave(room.id),\n              children: \"Leave\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, room.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tryAsGuestContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"tryAsGuestButton\",\n            onClick: handlePopupOpen,\n            children: \"Change Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popupContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"popupContent\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Enter Chat Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: chatName,\n                onChange: handleChatNameChange,\n                placeholder: \"Enter your chat name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleChatNameSubmit,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatColumn\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Chat ->\", ' ', currentChat ? (_rooms$find = rooms.find(room => room.id === currentChat)) === null || _rooms$find === void 0 ? void 0 : _rooms$find.name : 'Not Currently in a Chat']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentChat\",\n        children: getCurrentChatMessages().map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageColumns\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"messageUser\",\n              children: message.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"messageContent\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"messageTimestamp\",\n              children: message.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), index !== getCurrentChatMessages().length - 1 && /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"messageSeparator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 65\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message\",\n          className: \"messageInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMessageSend,\n          className: \"sendMessageButton\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userColumn\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(GuestPage, \"tV0Bvnr+nS/J16AFoxgwyyYS+8w=\");\n_c = GuestPage;\nexport default GuestPage;\nvar _c;\n$RefreshReg$(_c, \"GuestPage\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","GuestPage","_s","_rooms$find","rooms","id","name","currentChat","setCurrentChat","message","setMessage","chats","setChats","showPopup","setShowPopup","chatName","setChatName","backendUrl","socket","on","handleNewMessage","off","fetchMessages","response","fetch","ok","data","json","prevChats","console","log","error","saveMessage","newMessage","user","content","timestamp","Date","toLocaleTimeString","hour","minute","method","headers","body","JSON","stringify","emit","handleJoin","roomId","roomName","handleLeave","handleMessageSend","Error","alert","getCurrentChatMessages","handlePopupOpen","handlePopupClose","handleChatNameChange","e","target","value","handleChatNameSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","room","onClick","type","onChange","placeholder","find","index","length","_c","$RefreshReg$"],"sources":["/Users/coletrammell/Documents/GitHub/ChatApplication/frontend/src/GuestPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GuestPage.css';\nimport io from 'socket.io-client';\n\nconst GuestPage = () => {\n  const rooms = [\n    { id: 1, name: 'Room 1' },\n    { id: 2, name: 'Room 2' },\n    { id: 3, name: 'Room 3' },\n    // Add more rooms as needed\n  ];\n\n  const [currentChat, setCurrentChat] = useState('');\n  const [message, setMessage] = useState('');\n  const [chats, setChats] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n  const [chatName, setChatName] = useState('');\n  const [backendUrl] = useState('http://localhost:3001'); // Replace with your backend server URL\n\n  const socket = io(backendUrl);\n\n  useEffect(() => {\n    socket.on('message', handleNewMessage);\n    return () => {\n      socket.off('message', handleNewMessage);\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    if (currentChat) {\n      fetchMessages();\n    }\n  }, [currentChat]);\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/messages/${currentChat}`);\n      if (response.ok) {\n        const data = await response.json();\n        setChats((prevChats) => ({\n          ...prevChats,\n          [currentChat]: data,\n        }));\n      } else {\n        console.log('Failed to fetch chat messages');\n      }\n    } catch (error) {\n      console.log('Error fetching chat messages:', error);\n    }\n  };\n\n  const saveMessage = async () => {\n    if (!currentChat) {\n      console.log('Not currently in a chat room');\n      return;\n    }\n\n    const newMessage = {\n      user: chatName || 'Guest',\n      content: message,\n      timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n    };\n\n    try {\n      const response = await fetch(`${backendUrl}/messages/${currentChat}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newMessage),\n      });\n\n      if (response.ok) {\n        setChats((prevChats) => ({\n          ...prevChats,\n          [currentChat]: [...(prevChats[currentChat] || []), newMessage],\n        }));\n        setMessage('');\n        socket.emit('message', newMessage);\n      } else {\n        console.log('Failed to save chat message');\n      }\n    } catch (error) {\n      console.log('Error saving chat message:', error);\n    }\n  };\n\n  const handleJoin = (roomId, roomName) => {\n    console.log(`Joining room ${roomId}`);\n    setCurrentChat(roomId);\n    // Implement the logic to join the room with the specified roomId\n    if (!chats[roomId]) {\n      setChats((prevChats) => ({\n        ...prevChats,\n        [roomId]: [],\n      }));\n    }\n  };\n\n  const handleLeave = (roomId) => {\n    console.log(`Leaving room ${roomId}`);\n    setCurrentChat('');\n    // Implement the logic to leave the room with the specified roomId\n  };\n\n  const handleNewMessage = (newMessage) => {\n    setChats((prevChats) => ({\n      ...prevChats,\n      [currentChat]: [...(prevChats[currentChat] || []), newMessage],\n    }));\n  };\n\n  const handleMessageSend = () => {\n    console.log(`Sending message: ${message}`);\n    try {\n      if (!currentChat) {\n        throw new Error('You are not currently in a chat room.');\n      }\n      const newMessage = {\n        user: chatName || 'Guest',\n        content: message,\n        timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n      };\n      setChats((prevChats) => ({\n        ...prevChats,\n        [currentChat]: [...prevChats[currentChat], newMessage],\n      }));\n      setMessage('');\n      socket.emit('message', newMessage);\n    } catch (error) {\n      console.log(error.message);\n      alert(error.message); // Display an alert to the user\n    }\n  };\n\n  const getCurrentChatMessages = () => {\n    return chats[currentChat] || [];\n  };\n\n  const handlePopupOpen = () => {\n    setShowPopup(true);\n  };\n\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n\n  const handleChatNameChange = (e) => {\n    setChatName(e.target.value);\n  };\n\n  const handleChatNameSubmit = () => {\n    handlePopupClose();\n  };\n\n  return (\n    <div className=\"GuestChatContainer\">\n      <div className=\"roomColumn\">\n        <h3>Current Rooms</h3>\n        <div className=\"chatRoomCSS\">\n          {rooms.map((room) => (\n            <div key={room.id} className=\"roomItem\">\n              <div className=\"roomName\">{room.name}</div>\n              <div className=\"roomButtons\">\n                <button\n                  className=\"chatRoomButton joinButton\"\n                  onClick={() => handleJoin(room.id, room.name)}\n                >\n                  Join\n                </button>\n                <button className=\"chatRoomButton leaveButton\" onClick={() => handleLeave(room.id)}>\n                  Leave\n                </button>\n              </div>\n            </div>\n          ))}\n          <div className=\"tryAsGuestContainer\">\n            <button className=\"tryAsGuestButton\" onClick={handlePopupOpen}>\n              Change Name\n            </button>\n            {showPopup && (\n              <div className=\"popupContainer\">\n                <div className=\"popupContent\">\n                  <h3>Enter Chat Name</h3>\n                  <input\n                    type=\"text\"\n                    value={chatName}\n                    onChange={handleChatNameChange}\n                    placeholder=\"Enter your chat name\"\n                  />\n                  <button onClick={handleChatNameSubmit}>Submit</button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"chatColumn\">\n        <h3>\n          Current Chat -&gt;{' '}\n          {currentChat ? rooms.find((room) => room.id === currentChat)?.name : 'Not Currently in a Chat'}\n        </h3>\n        <div className=\"currentChat\">\n          {getCurrentChatMessages().map((message, index) => (\n            <div key={index} className=\"message\">\n              <div className=\"messageColumns\">\n                <span className=\"messageUser\">{message.user}</span>\n                <span className=\"messageContent\">{message.content}</span>\n                <span className=\"messageTimestamp\">{message.timestamp}</span>\n              </div>\n              {index !== getCurrentChatMessages().length - 1 && <hr className=\"messageSeparator\" />}\n            </div>\n          ))}\n        </div>\n        <div className=\"messageContainer\">\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Type your message\"\n            className=\"messageInput\"\n          />\n          <button onClick={handleMessageSend} className=\"sendMessageButton\">\n            Send\n          </button>\n        </div>\n      </div>\n      <div className=\"userColumn\">\n        <h3>Current Online</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default GuestPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}